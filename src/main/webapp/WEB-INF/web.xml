<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <!-- 加载Spring容器配置 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- Spring容器加载所有的配置文件的路径 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:spring/applicationContext.xml</param-value>
    </context-param>
    <!-- 配置SpringMVC核心控制器,将所有的请求(除了刚刚Spring MVC中的静态资源请求)都交给Spring MVC -->
    <servlet>
        <servlet-name>springMvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:spring/applicationContext-mvc.xml</param-value>
        </init-param>
        <!--用来标记是否在项目启动时就加在此Servlet,0或正数表示容器在应用启动时就加载这个Servlet,
        当是一个负数时或者没有指定时，则指示容器在该servlet被选择时才加载.正数值越小启动优先值越高  -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!--为DispatcherServlet建立映射-->
    <servlet-mapping>
        <servlet-name>springMvc</servlet-name>
        <!-- 拦截所有请求,千万注意是(/)而不是(/*) -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
 
    <!-- 设置编码过滤器 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
 
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
   	
   	<!-- 页面缓存过滤器 -->
<!-- 添加缓存 -->
<filter>
  <filter-name>testPageAddCachingFilter</filter-name>
  <filter-class>com.czxx.campusmanagement.filters.TestPageCachingFilter</filter-class>
  <init-param>
    <param-name>cacheName</param-name>
    <param-value>testPageCache</param-value>
  </init-param>
</filter>
 
<filter-mapping>
  <filter-name>testPageAddCachingFilter</filter-name>
  <url-pattern>/cachetest/list</url-pattern>
  <url-pattern>/cachetest/list2</url-pattern>
  <url-pattern>/cachetest/view/*</url-pattern>
</filter-mapping>
<!-- 清除缓存 -->
<filter>
  <filter-name>testPageRemoveCachingFilter</filter-name>
  <filter-class>com.czxx.campusmanagement.filters.TestPageRemoveCachingFilter</filter-class>
  <init-param>
    <param-name>cacheName</param-name>
    <param-value>testPageCache</param-value>
  </init-param>
</filter>
<filter-mapping>
  <filter-name>testPageRemoveCachingFilter</filter-name>
  <url-pattern>/cachetest/update/*</url-pattern>
  <url-pattern>/cachetest/delete/*</url-pattern>
</filter-mapping>
</web-app>

